<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_indie_neat_1_1_phenotype_1_1_node" kind="class" language="C++" prot="private">
    <compoundname>IndieNeat::Phenotype::Node</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_indie_neat_1_1_phenotype_1_1_node_1a9107237ee4f03439a84bda9ad563d9c7" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::_id</definition>
        <argsstring></argsstring>
        <name>_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="131" column="1" bodyfile="src/Phenotype.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_indie_neat_1_1_phenotype_1_1_node_1a4386f048820d1b941560cc0135f25ef9" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::_bias</definition>
        <argsstring></argsstring>
        <name>_bias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="132" column="1" bodyfile="src/Phenotype.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_indie_neat_1_1_phenotype_1_1_node_1ad23195d8de34f4f6eb27c7772384ce23" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::_value</definition>
        <argsstring></argsstring>
        <name>_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="133" column="1" bodyfile="src/Phenotype.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_indie_neat_1_1_phenotype_1_1_node_1af8b8dfdf10c6ab8b843c17b1e73f3778" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::_activ</definition>
        <argsstring></argsstring>
        <name>_activ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="134" column="1" bodyfile="src/Phenotype.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_indie_neat_1_1_phenotype_1_1_node_1ae81c05b3338027d1b2b710166d888f21" prot="private" static="no" mutable="no">
        <type>std::list&lt; std::pair&lt; Node *, Link * &gt; &gt;</type>
        <definition>std::list&lt;std::pair&lt;Node *, Link *&gt; &gt; IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::_inputs</definition>
        <argsstring></argsstring>
        <name>_inputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="135" column="1" bodyfile="src/Phenotype.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_indie_neat_1_1_phenotype_1_1_node_1aeea1f9e51b981dc3c5e203a3db1f98af" prot="private" static="no" mutable="no">
        <type>std::list&lt; std::pair&lt; Node *, Link * &gt; &gt;</type>
        <definition>std::list&lt;std::pair&lt;Node *, Link *&gt; &gt; IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::_outputs</definition>
        <argsstring></argsstring>
        <name>_outputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="136" column="1" bodyfile="src/Phenotype.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_indie_neat_1_1_phenotype_1_1_node_1a6e3a3a904491dd55a0c8a8f049fec22b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::Node</definition>
        <argsstring>(unsigned int id, double bias)</argsstring>
        <name>Node</name>
        <param>
          <type>unsigned int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>bias</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="53" column="1" bodyfile="src/Phenotype.hpp" bodystart="53" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_indie_neat_1_1_phenotype_1_1_node_1a7718f8729edcbae1f2d393b9620cdf13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::~Node</definition>
        <argsstring>(void)</argsstring>
        <name>~Node</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="56" column="1" bodyfile="src/Phenotype.hpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_indie_neat_1_1_phenotype_1_1_node_1a2b9c7cac4259cbd8f2971ca4383d08a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::addInput</definition>
        <argsstring>(Node *node, Link *link)</argsstring>
        <name>addInput</name>
        <param>
          <type>Node *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>Link *</type>
          <declname>link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="58" column="1" bodyfile="src/Phenotype.hpp" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_indie_neat_1_1_phenotype_1_1_node_1a0549eaedf51e99e7b46695e9509b71a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::addOutput</definition>
        <argsstring>(Node *node, Link *link)</argsstring>
        <name>addOutput</name>
        <param>
          <type>Node *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>Link *</type>
          <declname>link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="62" column="1" bodyfile="src/Phenotype.hpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_indie_neat_1_1_phenotype_1_1_node_1af303fdb44f719b35131641d6155ad7ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::Id</definition>
        <argsstring>(void) const</argsstring>
        <name>Id</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="66" column="1" bodyfile="src/Phenotype.hpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_indie_neat_1_1_phenotype_1_1_node_1a8998014bf45eb40d6f75f2f3406e5243" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::Value</definition>
        <argsstring>(void) const</argsstring>
        <name>Value</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="70" column="1" bodyfile="src/Phenotype.hpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_indie_neat_1_1_phenotype_1_1_node_1adfb3c130404cf1a4b1470b88ef65589a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::Active</definition>
        <argsstring>(void) const</argsstring>
        <name>Active</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="74" column="1" bodyfile="src/Phenotype.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_indie_neat_1_1_phenotype_1_1_node_1aec93e2da997fcde16c876c8893220e43" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::getFollowingNodes</definition>
        <argsstring>(std::vector&lt; Node *&gt; &amp;nexts, std::vector&lt; unsigned int &gt; const &amp;outputsIdx) const</argsstring>
        <name>getFollowingNodes</name>
        <param>
          <type>std::vector&lt; Node *&gt; &amp;</type>
          <declname>nexts</declname>
        </param>
        <param>
          <type>std::vector&lt; unsigned int &gt; const &amp;</type>
          <declname>outputsIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="78" column="1" bodyfile="src/Phenotype.hpp" bodystart="78" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_indie_neat_1_1_phenotype_1_1_node_1afe3ee4eac874e537ce6834d2d21bc91e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::setActive</definition>
        <argsstring>(bool activ)</argsstring>
        <name>setActive</name>
        <param>
          <type>bool</type>
          <declname>activ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="91" column="1" bodyfile="src/Phenotype.hpp" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_indie_neat_1_1_phenotype_1_1_node_1a4bd62ea8d7da1367cff692f7c3a04724" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::setValue</definition>
        <argsstring>(double value)</argsstring>
        <name>setValue</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="95" column="1" bodyfile="src/Phenotype.hpp" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_indie_neat_1_1_phenotype_1_1_node_1a5f88831cfcca18c56b065c1dbdc4fa63" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::activate</definition>
        <argsstring>(void)</argsstring>
        <name>activate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="99" column="1" bodyfile="src/Phenotype.hpp" bodystart="99" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_indie_neat_1_1_phenotype_1_1_node_1afdd06eb5f62e1cbdc48775a076f98d13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::forceActivate</definition>
        <argsstring>(void)</argsstring>
        <name>forceActivate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="112" column="1" bodyfile="src/Phenotype.hpp" bodystart="112" bodyend="119"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_indie_neat_1_1_phenotype_1_1_node_1a60b18a65f45a5f8b63c3ed7338a54bf8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::Node</definition>
        <argsstring>(Node const &amp;)</argsstring>
        <name>Node</name>
        <param>
          <type>Node const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_indie_neat_1_1_phenotype_1_1_node_1a8830db788782f41825c8bcef21f7b0b9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Node &amp;</type>
        <definition>Node&amp; IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::operator=</definition>
        <argsstring>(Node const &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>Node const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_indie_neat_1_1_phenotype_1_1_node_1aa25b80714ddc078b2508337c16dfee68" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double IndieNeat::Phenotype&lt; numInputs, numOutputs &gt;::Node::_sigmoid</definition>
        <argsstring>(double x)</argsstring>
        <name>_sigmoid</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Phenotype.hpp" line="126" column="1" bodyfile="src/Phenotype.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Phenotype.hpp" line="51" column="1" bodyfile="src/Phenotype.hpp" bodystart="51" bodyend="137"/>
    <listofallmembers>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1af8b8dfdf10c6ab8b843c17b1e73f3778" prot="private" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>_activ</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1a4386f048820d1b941560cc0135f25ef9" prot="private" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>_bias</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1a9107237ee4f03439a84bda9ad563d9c7" prot="private" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>_id</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1ae81c05b3338027d1b2b710166d888f21" prot="private" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>_inputs</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1aeea1f9e51b981dc3c5e203a3db1f98af" prot="private" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>_outputs</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1aa25b80714ddc078b2508337c16dfee68" prot="private" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>_sigmoid</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1ad23195d8de34f4f6eb27c7772384ce23" prot="private" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>_value</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1a5f88831cfcca18c56b065c1dbdc4fa63" prot="public" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>activate</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1adfb3c130404cf1a4b1470b88ef65589a" prot="public" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>Active</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1a2b9c7cac4259cbd8f2971ca4383d08a2" prot="public" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>addInput</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1a0549eaedf51e99e7b46695e9509b71a4" prot="public" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>addOutput</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1afdd06eb5f62e1cbdc48775a076f98d13" prot="public" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>forceActivate</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1aec93e2da997fcde16c876c8893220e43" prot="public" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>getFollowingNodes</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1af303fdb44f719b35131641d6155ad7ff" prot="public" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>Id</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1a6e3a3a904491dd55a0c8a8f049fec22b" prot="public" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>Node</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1a60b18a65f45a5f8b63c3ed7338a54bf8" prot="private" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>Node</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1a8830db788782f41825c8bcef21f7b0b9" prot="private" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>operator=</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1afe3ee4eac874e537ce6834d2d21bc91e" prot="public" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>setActive</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1a4bd62ea8d7da1367cff692f7c3a04724" prot="public" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>setValue</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1a8998014bf45eb40d6f75f2f3406e5243" prot="public" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>Value</name></member>
      <member refid="class_indie_neat_1_1_phenotype_1_1_node_1a7718f8729edcbae1f2d393b9620cdf13" prot="public" virt="non-virtual"><scope>IndieNeat::Phenotype::Node</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
